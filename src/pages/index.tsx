/* eslint-disable @typescript-eslint/no-misused-promises */
import { type NextPage } from "next";
import Head from "next/head";
import { useCallback, useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import styles from "./index.module.css";

const LOCAL_STORAGE_NAME_KEY = 'knockKnockMe';

type FormData = {
  name: string;
}

const Home: NextPage = () => {
  const { register, formState: {errors} , handleSubmit } = useForm<FormData>();
  const [answers, setAnswers] = useState<{name: string; isComing: boolean}[]>();

  const fetchAnswers = useCallback(()  => {
    fetch('/api/list-answers', {
      method: 'GET',
      headers: {
        'content-type': 'application/json'
      }
    }).then(res => res.json()).then(json => setAnswers(json.answers)).catch(e => {
      console.warn(e)
    })
  }, []);

  useEffect(()  => {
    fetchAnswers();
  }, [fetchAnswers]);

  const onSubmit = (name: string, isComing: boolean) => {
    localStorage.setItem(LOCAL_STORAGE_NAME_KEY, name);
    fetch('/api/answer', {
      method: 'POST',
      body: JSON.stringify({
        name,
        isComing,
      }),
      headers: {
        'content-type': 'application/json'
      }
    }).then(() => {
      fetchAnswers()
    }).catch(e => {
      console.warn(e)
    })
  }

  const onYesSubmit = (formData: FormData) => {
    if (answers?.find(answer => answer.name === formData.name)) {
      alert('You already answered!');
    } else {
      onSubmit(formData.name, true)
    }
  }
  const onNoSubmit = (formData: FormData) => {
    if (answers?.find(answer => answer.name === formData.name)) {
      alert('You already answered!');
    } else {
      onSubmit(formData.name, false)
    }
  }

  const positiveAnswers = answers?.filter(answer => answer.isComing);
  const negativeAnswers = answers?.filter(answer => !answer.isComing);

  return (
    <>
      <Head>
        <title>Knock Knock</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={'container'}>
          <div className={styles.headlineContainer}>
            <h1>
              Knock Knock âœŠðŸšª
            </h1>
            <h2>
              Who&#39;s There Tomorrow?
            </h2>
          </div>
          <form className={styles.form} onSubmit={handleSubmit(() => {})}>
            <label className={styles.label} htmlFor={'name'}>
              Name
              <input {...register('name', {
                required: 'Please enter your name!'
              })} className={styles.input}></input>
              {errors.name ? <span>{errors.name.message}</span> : null}
            </label>
            <div className={styles.buttonContainer}>
              <button onClick={() => {
                handleSubmit(onYesSubmit)()
              }} className={`${styles.bigButton as string} ${styles.buttonYes as string}`}>I&#39;ll be in the office ðŸ™Œ</button>
              <button onClick={() => {
                handleSubmit(onNoSubmit)()
              }} className={`${styles.bigButton as string} ${styles.buttonNo as string}`}>I&#39;ll stay home ðŸ›‹</button>
            </div>
          </form>
        </div>
        <div className={'container'}>
          <h1>
            Overview
          </h1>
          {negativeAnswers && positiveAnswers ? <>
            <h2>{positiveAnswers?.length === 1 ? `${positiveAnswers?.length} person` : `${positiveAnswers?.length} people`} will come to the office tomorrow:</h2>
            <ul>
              {positiveAnswers?.map(answer => <li key={answer.name}>{answer.name}{localStorage.getItem(LOCAL_STORAGE_NAME_KEY) === answer.name ? <button style={{marginLeft: '10px'}}>X</button> : null}</li>)}
            </ul>
            <h2>{negativeAnswers?.length === 1 ? `${negativeAnswers?.length} person` : `${negativeAnswers?.length} people`} decided to stay home:</h2>
            <ul>
              {negativeAnswers?.map(answer => <li key={answer.name}>{answer.name}{localStorage.getItem(LOCAL_STORAGE_NAME_KEY) === answer.name ? <button style={{marginLeft: '10px'}}>X</button> : null}</li>)}
            </ul>
          </> : null}
        </div>
      </main>
    </>
  );
};

export default Home;
